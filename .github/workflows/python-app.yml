# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Training Pipelines

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:

  deploy-runner:
    runs-on: ubuntu-latest
    steps:
      - uses: iterative/setup-cml@v1
      - uses: actions/checkout@v2
      - name: Deploy runner on EC2
        env:
          REPO_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cml-runner \
              --cloud=aws \
              --cloud-region=us-east-1 \
              --cloud-type=m4.2xlarge \
              --labels=cml-cpu

  build:

    needs: deploy-runner
    runs-on: [self-hosted, cml-cpu]
    timeout-minutes: 4320 # 72h
    container:
      image: hsvai/product-rec:train
      # options: --gpus all
    env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        WANDB_API_KEY: ${{secrets.WANDB_API_KEY}}
        REPO_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      
    - name: vipin20  
      run: kedro run --env vipin20 --pipeline vipin20
      
    - name: brazilian
      run: kedro run --env brazilian --pipeline brazilian
      
    - name: ecommerce
      run: kedro run --env ecommerce --pipeline ecommerce
      
    - name: jewelry
      run: kedro run --env jewelry --pipeline jewelry
      
    - name: retailrocket
      run: kedro run --env retailrocket --pipeline retailrocket
      
    - name: journey
      run: kedro run --env journey --pipeline journey
#
#        // Too sparse and takes a very long time
#        kedro run --env electronics --pipeline electronics
